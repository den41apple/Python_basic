'''
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь
сам не остановит работу скрипта, введя, например, команду “stop”.
При этом скрипт завершается, сформированный список выводится на экран.

Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число)
и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
'''


class MyExceprion(Exception):
    def __init__(self, txt):
        self.txt = txt

    @staticmethod
    def check_data_type():
        try:
            el = input('Введите элемент списка, или "stop" для завершения: ')
            if el == 'stop':
                return False
            elif not el.isdigit():
                raise MyExceprion(f'Элемент "{el}" не является числом')
            else:
                return el
        except MyExceprion as err:
            print(f'Ошибка {err}')


l1 = []
el = True
while el != False:
    el = MyExceprion.check_data_type()
    if el == None:
        pass
    else:
        l1.append(el)

if l1[-1] == False:
    l1.pop()

print(l1)
