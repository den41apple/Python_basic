'''
1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц вы найдете в методичке.

Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.

Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.

Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с
первым элементом первой строки второй матрицы и т.д.
'''


class Matrix:
    def __init__(self, *args):
        self.matrix = args

    def __str__(self):
        _format = ''
        for x in self.matrix[0]:

            for k in x:
                _format += f'{str(k):2}' + ' '
            _format += '\n'
        return f'\nРезультат сложения равен: \n{_format}'

    def __add__(self, other):
        result = []
        for i in range(len(self.matrix)):
            temp_result = []
            for k in range(len(self.matrix[i])):
                num = self.matrix[i][k] + other.matrix[i][k]
                temp_result.append(num)
            result.append(temp_result)
        self.matrix = result

        return self.matrix


matrix_1 = Matrix([1, 2, 3, 4], \
                  [4, 5, 6, 4], \
                  [1, 1, 1, 1], \
                  [1, 1, 1, 1])

matrix_2 = Matrix([1, 2, 3, 4], \
                  [4, 5, 6, 4], \
                  [1, 1, 1, 1], \
                  [1, 1, 1, 1])

print(Matrix(matrix_1 + matrix_2))
